name: Master
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies with docker
        run: |
          docker run --rm --name tchevalleraud_extremenetworks-api-xiqse --user $(id -u):$(id -g) -v "$PWD":/app composer composer install --prefer-dist --no-progress
          sleep 10
      - name: Execute tests with docker
        run: |
          docker run --rm --name tchevalleraud_extremenetworks-api-xiqse --user $(id -u):$(id -g) -v "$PWD":/usr/src/myapp -w /usr/src/myapp -e XDEBUG_MODE=coverage mileschou/xdebug:8.1 vendor/bin/phpunit --configuration phpunit.xml.dist
          sleep 10
      - name: Upload tests results
        uses: actions/upload-artifact@v2
        with:
          name: phpunit
          path: |
            coverage.xml
            phpunit.xml
  test-snyk:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/php@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  test-codacy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download tests results
        uses: actions/download-artifact@v2
        with:
          name: phpunit
      - name: Upload coverage results to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_TOKEN }}
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml
  test-coveralls:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download tests results
        uses: actions/download-artifact@v2
        with:
          name: phpunit
      - name: Upload coverage results to Coveralls
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
  test-sonarcloud:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download tests results
        uses: actions/download-artifact@v2
        with:
          name: phpunit
      - name: Fix coverage for SonarCloud
        run: |
          sed -i 's/\/usr\/src\/myapp\//\/github\/workspace\//g' coverage.xml
          sed -i 's/\/usr\/src\/myapp\//\/github\/workspace\//g' phpunit.xml
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}